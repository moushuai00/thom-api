<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thom.dao.TbActionMapper">
  <resultMap id="BaseResultMap" type="com.thom.dto.TbAction">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="request_type" jdbcType="INTEGER" property="requestType" />
    <result column="disable_cache" jdbcType="TINYINT" property="disableCache" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.thom.dto.TbActionWithBLOBs">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="request_url" jdbcType="LONGVARCHAR" property="requestUrl" />
    <result column="response_template" jdbcType="LONGVARCHAR" property="responseTemplate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, request_type, disable_cache
  </sql>
  <sql id="Blob_Column_List">
    description, request_url, response_template
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.thom.dto.TbActionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.thom.dto.TbActionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_action
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_action
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.thom.dto.TbActionExample">
    delete from tb_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.thom.dto.TbActionWithBLOBs">
    insert into tb_action (id, name, request_type, 
      disable_cache, description, request_url, 
      response_template)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{requestType,jdbcType=INTEGER}, 
      #{disableCache,jdbcType=TINYINT}, #{description,jdbcType=LONGVARCHAR}, #{requestUrl,jdbcType=LONGVARCHAR}, 
      #{responseTemplate,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.thom.dto.TbActionWithBLOBs">
    insert into tb_action
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="requestType != null">
        request_type,
      </if>
      <if test="disableCache != null">
        disable_cache,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="requestUrl != null">
        request_url,
      </if>
      <if test="responseTemplate != null">
        response_template,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="requestType != null">
        #{requestType,jdbcType=INTEGER},
      </if>
      <if test="disableCache != null">
        #{disableCache,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="requestUrl != null">
        #{requestUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="responseTemplate != null">
        #{responseTemplate,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.thom.dto.TbActionExample" resultType="java.lang.Long">
    select count(*) from tb_action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_action
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.requestType != null">
        request_type = #{record.requestType,jdbcType=INTEGER},
      </if>
      <if test="record.disableCache != null">
        disable_cache = #{record.disableCache,jdbcType=TINYINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.requestUrl != null">
        request_url = #{record.requestUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.responseTemplate != null">
        response_template = #{record.responseTemplate,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_action
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      request_type = #{record.requestType,jdbcType=INTEGER},
      disable_cache = #{record.disableCache,jdbcType=TINYINT},
      description = #{record.description,jdbcType=LONGVARCHAR},
      request_url = #{record.requestUrl,jdbcType=LONGVARCHAR},
      response_template = #{record.responseTemplate,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_action
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      request_type = #{record.requestType,jdbcType=INTEGER},
      disable_cache = #{record.disableCache,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.thom.dto.TbActionWithBLOBs">
    update tb_action
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="requestType != null">
        request_type = #{requestType,jdbcType=INTEGER},
      </if>
      <if test="disableCache != null">
        disable_cache = #{disableCache,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="requestUrl != null">
        request_url = #{requestUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="responseTemplate != null">
        response_template = #{responseTemplate,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.thom.dto.TbActionWithBLOBs">
    update tb_action
    set name = #{name,jdbcType=VARCHAR},
      request_type = #{requestType,jdbcType=INTEGER},
      disable_cache = #{disableCache,jdbcType=TINYINT},
      description = #{description,jdbcType=LONGVARCHAR},
      request_url = #{requestUrl,jdbcType=LONGVARCHAR},
      response_template = #{responseTemplate,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.thom.dto.TbAction">
    update tb_action
    set name = #{name,jdbcType=VARCHAR},
      request_type = #{requestType,jdbcType=INTEGER},
      disable_cache = #{disableCache,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>