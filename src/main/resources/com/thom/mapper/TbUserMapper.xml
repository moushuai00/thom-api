<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thom.dao.TbUserMapper">
  <resultMap id="BaseResultMap" type="com.thom.dto.TbUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_locked_out" jdbcType="INTEGER" property="isLockedOut" />
    <result column="is_hint_enabled" jdbcType="INTEGER" property="isHintEnabled" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="incorrect_login_attempt" jdbcType="INTEGER" property="incorrectLoginAttempt" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="mock_num" jdbcType="INTEGER" property="mockNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, password, name, email, create_date, is_locked_out, is_hint_enabled, 
    last_login_date, incorrect_login_attempt, realname, emp_id, mock_num
  </sql>
  <select id="selectByExample" parameterType="com.thom.dto.TbUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.thom.dto.TbUserExample">
    delete from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.thom.dto.TbUser">
    insert into tb_user (id, account, password, 
      name, email, create_date, 
      is_locked_out, is_hint_enabled, last_login_date, 
      incorrect_login_attempt, realname, emp_id, 
      mock_num)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{isLockedOut,jdbcType=INTEGER}, #{isHintEnabled,jdbcType=INTEGER}, #{lastLoginDate,jdbcType=TIMESTAMP}, 
      #{incorrectLoginAttempt,jdbcType=INTEGER}, #{realname,jdbcType=VARCHAR}, #{empId,jdbcType=VARCHAR}, 
      #{mockNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.thom.dto.TbUser">
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="isLockedOut != null">
        is_locked_out,
      </if>
      <if test="isHintEnabled != null">
        is_hint_enabled,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="incorrectLoginAttempt != null">
        incorrect_login_attempt,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="mockNum != null">
        mock_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isLockedOut != null">
        #{isLockedOut,jdbcType=INTEGER},
      </if>
      <if test="isHintEnabled != null">
        #{isHintEnabled,jdbcType=INTEGER},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="incorrectLoginAttempt != null">
        #{incorrectLoginAttempt,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="mockNum != null">
        #{mockNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.thom.dto.TbUserExample" resultType="java.lang.Long">
    select count(*) from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isLockedOut != null">
        is_locked_out = #{record.isLockedOut,jdbcType=INTEGER},
      </if>
      <if test="record.isHintEnabled != null">
        is_hint_enabled = #{record.isHintEnabled,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginDate != null">
        last_login_date = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.incorrectLoginAttempt != null">
        incorrect_login_attempt = #{record.incorrectLoginAttempt,jdbcType=INTEGER},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.mockNum != null">
        mock_num = #{record.mockNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_user
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      is_locked_out = #{record.isLockedOut,jdbcType=INTEGER},
      is_hint_enabled = #{record.isHintEnabled,jdbcType=INTEGER},
      last_login_date = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      incorrect_login_attempt = #{record.incorrectLoginAttempt,jdbcType=INTEGER},
      realname = #{record.realname,jdbcType=VARCHAR},
      emp_id = #{record.empId,jdbcType=VARCHAR},
      mock_num = #{record.mockNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.thom.dto.TbUser">
    update tb_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isLockedOut != null">
        is_locked_out = #{isLockedOut,jdbcType=INTEGER},
      </if>
      <if test="isHintEnabled != null">
        is_hint_enabled = #{isHintEnabled,jdbcType=INTEGER},
      </if>
      <if test="lastLoginDate != null">
        last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="incorrectLoginAttempt != null">
        incorrect_login_attempt = #{incorrectLoginAttempt,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="mockNum != null">
        mock_num = #{mockNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.thom.dto.TbUser">
    update tb_user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      is_locked_out = #{isLockedOut,jdbcType=INTEGER},
      is_hint_enabled = #{isHintEnabled,jdbcType=INTEGER},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      incorrect_login_attempt = #{incorrectLoginAttempt,jdbcType=INTEGER},
      realname = #{realname,jdbcType=VARCHAR},
      emp_id = #{empId,jdbcType=VARCHAR},
      mock_num = #{mockNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>